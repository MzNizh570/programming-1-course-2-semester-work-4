#include "heading.h"
 

///////////////////////////// Функции для проверки открытия файловых потоков //////////////////////////
void CheckFile(std::ofstream &file){  
     if(!file.is_open()){ 
          cout << red << endl <<  "\t\t\tПроизошла ошибка при открытие файлового потока для записи!" << endl << endl;
          cout << "\t\t\t\tУстраните проблему и перезапустите программу!" << reset << endl;
          cout << flicker << red << "============================\t\tДосрочное завершение программы... \t===========================" << reset << endl << endl; 
          exit(1);
     }
}

void CheckFile(std::ifstream &file){  
     if(!file.is_open()){ 
          cout << red << endl <<  "\t\t\tПроизошла ошибка при открытии файлового потока для чтения!" << endl;
          cout << "\t\t\t\tУстраните проблему и перезапустите программу!" << reset << endl;
          cout << flicker << red << "============================\t\tДосрочное завершение программы... \t===========================" << reset << endl << endl << endl; 
          exit(1);
     }
}


/////////////////// функции проверяющая строку на содержание только цифр  ///////////////////////////
int CheckInputNumbers(char *str){
     size_t len = strlen(str);
     for (int i = 0; i < len; i++){
          if(str[i] < '0' || str[i] > '9'){
               return 0;
          }
     }
     return 1;
};



//////////////////////////// Получение кол-ва пунктов, если они не указаны во время запуска ///////////////////////////////
int GetQuantityOfPoints(){
     char numberOfLines[12];
     int NumbLines;

     cout << "\tБыл выбран режим без указания кол-ва пунктов в таблице при запуске программы.";

     while(true){
          cout << endl << flicker << "\t\tУкажите кол-во пунктов в таблице: " << reset;
          cin.unsetf(std::ios::skipws);
          std::cin >> numberOfLines;
          if(cin.good() && atoi(numberOfLines) > 0 && CheckInputNumbers(numberOfLines)){
               if(atoi(numberOfLines) > 100){
                    cout << endl << red << "\t\t\t\t\tПревышен лимит записей!" << reset << endl;
                    cout << "\t\t\t\tВряд ли вам надо так много пунктов :) " << endl;
                    cout << "\t\tCкорее всего такое кол-во пунктов(или более) приведет к ошибке или зависанию системы." << endl << endl; 
                    cout << flicker << red << "================\tДосрочное завершение программы... \t================" << reset << endl << endl; 
                    exit(1);
               }
               NumbLines = atoi(numberOfLines);
               cin.ignore(10, '\n');
               break;
          }
          cin.clear();
          cout << red << endl << "\t\tНеправильный ввод! Введите корректное число пунктов таблицы." << reset;
          cin.ignore(10, '\n');
     }
     cout << std::endl;
     return NumbLines;
}



/////////////// функция для получения кол-ва пунктов из аргументов при запуске //////////////////
int GetQuantityOfPoints(char *argv){
     if(atoi(argv) < 1 || !CheckInputNumbers(argv)){
          cout << red << endl << "\t\tБыло задано неверное кол-во пунктов при запуске!" << endl;
          cout << flicker << red << "================\tДосрочное завершение программы... \t================" << reset << endl << endl; 
          exit(1);
     } 
     int numberOfLines = std::atoi(argv); 
     return numberOfLines;
};





/////////////////// Функция для вывода сообщения о неправильном флаге при запуске ///////////////////////
void PrintErrorFlag(){
     cout << red << endl << "\t\t\tБыл введен неверный флаг при запуске!" << endl;
     cout << " Для получении справки о флагах запуска воспользуйтесь справкой: ./lab3 [-h || --help]" << endl;
     cout  << "======================     Досрочное завершение программы...     ======================"<< reset << endl << endl;   
};


//////////////////// Функция для вывода предупреждения при вводе информации о объекте /////////////////////////// 
void PrintWarning(){
     cout << red << "  Внимание!!! " << reset << "При вводе Марки/Изготовителя на русском языке, во время вывода таблицы в консоль она может " << magenta << "\"съехать\"" << reset << endl;
     cout << "\t\t\t\tРекомедуемый язык для ввода: " << cyan << "Английский" << reset << endl << endl; 
}; 



/////////////////////////////////// Функции с выводом логотипа, шапки, справок: //////////////////////////////////////

void PrintLogotip()
{
     std::cout << std::endl << red <<"\t**************************************************************************************************"<< std::endl;
     std::cout << "\t*******"  << yellow <<"*************"   << red << "************" <<cyan<<"******" <<red << "************************************************************"<< std::endl;
     std::cout << "\t******"   << yellow <<"*             *" << red <<"**********" <<cyan<<"*********" <<red << "**********************************************************"<< std::endl;
     std::cout << "\t*******"  << yellow <<"*************"   << red << "*********" <<cyan<<"***"<< red<<"*****" <<cyan << "***" << red << "**********************************************************"<< std::endl;
     std::cout << "\t*******"  << yellow <<"*" << cyan << "**********" << yellow <<"*" << red << "**********" <<cyan<<"***" << red << "******************************************************************"<< std::endl;
     std::cout << "\t*******"  << yellow <<"***" << red << "sapog" << yellow <<"****" << red << "***********" <<cyan<<"***" << red << "*****************************************************************"<< std::endl;
     std::cout << "\t*******"  << yellow <<"************" << red << "*************" <<cyan<<"*******"    << red<<  "********" <<cyan<<"**********"<<red <<"***"<<cyan<<"*******"<<red <<"*****" << cyan << "*********" <<red<<"***"<<cyan<<"*********"<<red<<"*****"<< std::endl;
     std::cout << "\t********" << yellow <<"**********"   << red << "****************" <<cyan<<"*******" << red<<  "*****" <<cyan<<"****"<<red<<"****"<<cyan<<"***"<<red <<"***"<<cyan<<"***"<<red <<"***"<<cyan<<"***" <<red <<"***" <<cyan<<"***" <<red << "***"<<cyan<<"***"<<red<<"***"<<cyan<<"***"<<red<<"***"<<cyan<<"***"<<red<<"*****"<< std::endl;
     std::cout << "\t*******"  << yellow <<"************" << red << "****************" <<cyan<<"*******" << red<<  "****" <<cyan<<"****"<<red<<"****"<<cyan<<"***"<<red <<"***"<<cyan<<"***"<<red <<"***"<<cyan<<"***"<<red <<"***" <<cyan<<"***" <<red << "***"<<cyan<<"***"<<red<<"***"<<cyan<<"***"<<red<<"***"<<cyan<<"***"<<red<<"*****"<< std::endl;
     std::cout << "\t*******"  << yellow <<"************" << red <<"***********"<<cyan<< ""<<red <<"***" <<cyan<<"*******"<< red<< "******"<<cyan<<"****"<<red<<"****"<<cyan<<"***"<<red <<"***"<<cyan<<"*******"<<red <<"*****"<<cyan<<"***"<<red <<"***" <<cyan<<"***" <<red<<"***"<<cyan<<"*********"<<red<<"*****"<< std::endl;
     std::cout << "\t*******"  << yellow <<"************" << red << "*********" <<cyan<<"**********"<< red<< "********"<<cyan<<"****"<<red<<"****"<<cyan<<"***"<<red <<"***"<<cyan<<"***"<<red <<"*********"<<cyan<<"***"<<red <<"***" <<cyan<<"***" <<red<<"*********"<<cyan<<"***"<<red<<"*****"<< std::endl;
     std::cout << "\t*******"  << yellow <<"************" << red << "**********" <<cyan<<"********"<< red<< "**********" <<cyan<<"***********"<<red <<"**"<<cyan<<"***"<<red <<"*********" << cyan << "*********" <<red<<"*********"<<cyan<<"***"<<red<<"*****"<< std::endl;
     std::cout << "\t*******"  << yellow <<"**************"<<red<<"*********"<<yellow<<"*" << red << "**************************************************"<<red<<"***"<<cyan<<"*********"<<red<<"*****"<< std::endl;
     std::cout << "\t*******"  << yellow <<"***********************" << red <<"*******************"<<cyan<< "Программируй светлое будущее!"<<red<<"******"<<cyan<<"*********"<<red<<"*****"<< std::endl;
     std::cout << "\t********" << cyan   <<"******"<< red <<"***"<<cyan<<"************" << red << "*********************************************************************" << std::endl;
     std::cout << "\t**************************************************************************************************"<< reset << std::endl << std::endl;
};

void PrintHat(const int jubNumber, const int optionNumber)
{
     cout << magenta << "\t\t**************************************************************\n" << reset;
     cout << magenta << "\t\t*" << reset << "************************************************************"<< magenta << "*\n";
     cout <<"\t\t*" << reset << "*** Нижегородский государственный технический университет ***" << magenta << "*\n";
     cout <<"\t\t*" << reset << "************* Лабораторная работа №"<< jubNumber << " Варинт №" << optionNumber << " ************" << magenta << "*\n";
     cout <<"\t\t*" << reset << "************* Выполнил: студент группы 19-IVT-3 ************" << magenta << "*\n";
     cout <<"\t\t*" << reset << "******************* Сапожников Владислав *******************" << magenta << "*\n";
     cout << magenta << "\t\t*" << reset << "************************************************************"<< magenta << "*\n";
     cout << magenta << "\t\t**************************************************************\n" << reset;
     cout << std::endl;
  
};

void PrintShortreferens()
{
     std::cout << red << "========================\tОшибка запуска! \t========================" << reset << std::endl << std::endl; 
     std::cout << "\tРазрабатываемая программа предназначена для хранения массива объектов класса." << std::endl;
     std::cout << "\tСозданная электронная таблица, массив экземпляров класса сохраняется в бинарном файле." << std::endl;
     cout << "\tВ ходе выполнения работы был разработан пользовательский класс TCharArrar," << endl;
     cout << "\tиспользуемый для хранения элементов типа char. В данном классе реализованы" << endl;
     cout << "\tметод at() для доступа к элементу символьного массива с проверкой корректности" << endl;
     cout << "\tзначения индекса элемента массива. Кроме того, была перегружена операция[]." << endl;
     cout << "\tиспользуя класс TCharArray в качестве родительского было был создан производный класс" << endl;
     cout << "\tMyString, используемый для хранения символьных строк. Для данного класса были" << endl;
     cout << "\tследующие операции: +, ==, >, <, !=" << endl;
     std::cout << "\tПоддерживается управление на уровне аргументов командной строки (аргументов запуска)." << std::endl << std::endl;
     std::cout << "\tДля дополнительной информации введите: " << std::endl;
     std::cout << "\t  ./main [-h || --help]" << std::endl << std::endl;
     std::cout << "\tДля запуска введите: " << std::endl;
     std::cout << "\t  ./main (<флаг_режима>) ([кол-во_записей]) (путь_к_текстовому_файлу)" << std::endl << std::endl;
     std::cout << flicker << red << "================\tДосрочное завершение программы... \t================" << reset << std::endl << std::endl; 
}

void PrintFullReferens(const double release, const double update)
{
     std::cout << std::endl << "Разработчик: " << std::endl << std::endl;
     std::cout << "\tстудент группы 19-IVT-3" << std::endl;
     std::cout << "\tСапожников Владислав" << std::endl;
     std::cout << std::endl << "\tдата релиза:" << release <<".20" << std::endl;
     std::cout << "\tдата последнего обновления:" << update <<".20" << std::endl << std::endl;


     std::cout << "Функции программы: " << std::endl << std::endl;
     std::cout << "\tРазрабатываемая программа предназначена для хранения массива объектов класса." << std::endl;
     std::cout << "\tСозданная электронная таблица, массив экземпляров класса сохраняется в бинарном файле." << std::endl;
     cout << "\tВ ходе выполнения работы был разработан пользовательский класс TCharArrar," << endl;
     cout << "\tиспользуемый для хранения элементов типа char. В данном классе реализованы" << endl;
     cout << "\tметод at() для доступа к элементу символьного массива с проверкой корректности" << endl;
     cout << "\tзначения индекса элемента массива. Кроме того, была перегружена операция[]." << endl;
     cout << "\tиспользуя класс TCharArray в качестве родительского было был создан производный класс" << endl;
     cout << "\tMyString, используемый для хранения символьных строк. Для данного класса были" << endl;
     cout << "\tследующие операции: +, ==, >, <, !=" << endl;
     std::cout << "\tПоддерживается управление на уровне аргументов командной строки (аргументов запуска)." << std::endl << std::endl;

     std::cout << red << "  Убедительная просьба запускать программу только в полноэкранном режиме консоли!!" << reset << std::endl;

     std::cout << red << "  Если во время вывода таблица " << magenta << "\"съехала\"" << red << " перезаполните таблицу согласно её размерсноти." << reset << std::endl;


     std::cout << std::endl <<"Для запуска введите: " << std::endl << std::endl;
     std::cout << "\t  ./main (<флаг_режима>) ([кол-во_записей]) (<путь_к_текстовому_файлу>)" << std::endl << std::endl;
     

     std::cout << std::endl << "Флаги:" << std::endl << std::endl;
     std::cout << "\t-с - запуск программы в режиме создания электронной таблицы записей" << std::endl;
     std::cout << "\t-r - запуск программы в режиме чтения содержимого текстового файла" << std::endl;


     std::cout << std::endl << "Системные требования: " <<std::endl << std::endl;
     std::cout <<"\tОперационная система: windows, linux, MacOS" << std::endl;
     std::cout <<"\tЦентральный процессор: Pentium 4 2.5 GHz (одноядерный) и выше" << std::endl;
     std::cout <<"\tОбъём RAM: 20Kб непрерывной свободной памяти и выше" << std::endl; 


     std::cout << std::endl << "Контанктная информация:  (указаны не существующие данные)" << std::endl << std::endl;
     std::cout << "\t телефон: 8-800-555-35-35 " << std::endl;
     std::cout << "\t e-male: vasya.pupkin@rumbler.com" << std::endl << std::endl;
}


